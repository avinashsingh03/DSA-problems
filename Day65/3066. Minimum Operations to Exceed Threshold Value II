
class Solution(object):
    def minOperations(self, nums, k):
        """
        :type nums: List[int]
        :type k: int
        :rtype: int
        """
        heapq.heapify(nums)  # Convert nums into a min-heap (O(n))
        count = 0

        while nums[0] < k:  # Check the smallest element
            min1 = heapq.heappop(nums)  # Extract min (O(log n))
            min2 = heapq.heappop(nums)  # Extract second min (O(log n))
            heapq.heappush(nums, min1 * 2 + min2)  # Insert new element (O(log n))
            count += 1

        return count

class Solution {
public:
    vector<int>getprime(int left,int n){
        vector<bool>prime(n+1,0);
        prime[0] = prime[1] =1;

        for(int i=2;i*i <= n;i++){
           if(prime[i]==0){
              for(int j=i*i;j<=n;j+=i){
                prime[j]=1;
              }
           }
        }

        vector<int>getprime;
        for(int i=2;i<=n;i++){
            // cout<<i<<" "<<prime[i]<<"|";
            if(prime[i]==0 and (i>=left and i<=n)){
                
                getprime.push_back(i);
            }
        }  
        return getprime;
    }
    vector<int> closestPrimes(int left, int right) {
        vector<int>primefac = getprime(left,right);
        int n = primefac.size();
        if(n<2)return {-1,-1};
        int mini = INT_MAX;
        int x=-1,y=-1;
        for(int i=0;i<n-1;i++){
            if(primefac[i+1]-primefac[i] < mini){
                cout<<primefac[i]<<primefac[i+1];
                mini = primefac[i+1]-primefac[i];
                x = primefac[i];
                y = primefac[i+1];
            }
        }
        return {x,y};
    }
};

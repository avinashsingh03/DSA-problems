class Solution(object):
    def wordSubsets(self, words1, words2):
        """
        :type words1: List[str]
        :type words2: List[str]
        :rtype: List[str]
        """
        # Step 1: Calculate the maximum frequency of each character required by words2
        max_counts = Counter()
        for word in words2:
            word_count = Counter(word)
            for char, count in word_count.items():
                max_counts[char] = max(max_counts[char], count)
        
        # Step 2: Filter words1 based on max_counts
        result = []
        for word in words1:
            word_count = Counter(word)
            # Check if the word meets the requirements
            if all(word_count[char] >= max_counts[char] for char in max_counts):
                result.append(word)
        
        return result

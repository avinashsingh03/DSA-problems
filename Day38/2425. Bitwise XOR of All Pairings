Ifclass Solution {
public:
    int xorAllNums(vector<int>& nums1, vector<int>& nums2) {
        int ans=0;
        if((nums1.size()%2)!=0){
            for(int i=0;i<nums2.size();i++){
                ans^=nums2[i];
            }
        }
        if((nums2.size()%2)!=0){
            for(int i=0;i<nums1.size();i++){
                ans^=nums1[i];
            }
        }
        return ans;
    }
};
//Optimized logic: 
//If length of both array is even then every element will be XORed even time and final ansert will be zero(0):
//If legth of first array is odd and length of second array is even then element of second array will be XORed odd times and values is stored in ans. 
//If legth of second array is odd and length of first array is even then element of first array will be XORed odd times and values is stored in ans. 
//If length of both array is odd then element of both array will be XORed and the answer will be stored in ans.
